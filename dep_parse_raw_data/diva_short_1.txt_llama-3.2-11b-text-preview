To create a dependency tree for the given Swedish sentence, we can use the following Python script based on the Stanford Parser. For simplicity, I'll provide a manual interpretation of the dependency tree. Please note that precise dependency parsing would require a full-fledged parser or the use of an existing tool.

Here's the sentence: Även om det rör sig om att man som 2-åring lär sig att inte springa in ett träd för att man får väldigt ont då.

Manual Dependency Tree:

1. Även (token 'Även', head 'om', dependent type: adv)
 - dependency pair: (1, Även, 2)
2. om (token 'om', head 'rör sig om', dependent type: conj)
 - dependency pair: (2, om, 0)
3. det (token 'det', head 'rör sig om', dependent type: nsubj)
 - dependency pair: (3, det, 2)
4. rör (token 'rör', head 'sig om att', dependent type: cop)
 - dependency pair: (4, rör, 2)
5. sig (token 'sig', head 'rör sig om dat', dependent type: dobj)
 - dependency pair: (5, sig, 4)
6. om (token 'om', head 'rör sig om att', dependent type: advm)
 - dependency pair: (6, om, 2)
7. att (token 'att', head 'rör sig om att', dependent type: comp)
 - dependency pair: (7, att, 4)
8. man (token 'man', head 't', dependent type: nsubj)
 - dependency pair: (8, mans, 7)
9. som (token 'som', head 'man', dependent type: advcl)
 - dependency pair: (9, som, 8)
10. 2-åring (token '2-åring', head 'man', dependent type: nmod)
 - dependency pair: (10, 2-åring, 8)
11. lär (token 'lär', head 'att', dependent type: aux)
 - dependency pair: (11, lär, 7)
12. sig (token 'sig', head 'lär att', dependent type: dobj)
 - dependency pair: (12, sig, 11)
13. att (token 'att', head 'lär att', dependent type: 2)
 - dependency pair: (13, att, 14)
14. inte (token 'inte', head 'man', dependent type: neg)
 - dependency pair: (14, inte, 8)
15. springa (token 'springa', head 'inte', dependent type: obj)
 - dependency pair: (15, springa, 14)
16. in (token 'in', head 'springa', dependent type: prep)
 - dependency pair: (16, in, 15)
17. ett (token 'ett', head 'in ett träd', dependent type: det)
 - dependency pair: (17, ett, 16)
18. träd (token 'träd', head 'in ett träd', dependent type: pobj)
 - dependency pair: (18, träd, 17)
19. för (token 'för', head 'man', dependent type: adv)
 - dependency pair: (19, för, 8)
20. om (token 'om', head 'man', dependent type: adv)
 - dependency pair: (20, man, 7)
21. att (token 'att', head 'man', dependent type: comp)
 - dependency pair: (21, att, 8)
22. man (token 'man', head 'h', dependent type: nsubj)
 - dependency pair: (22, mans, 21)
23. får (token 'får', head 'väldigt ont', dependent type: aux)
 - dependency pair: (23, får, 30)
24. väldigt (token 'väldigt', head 'väldigt ont', dependent type: advmod)
 - dependency pair: (24, väldigt, 30)
25. ont (token 'ont', head 'får väldigt ont', dependent type: pobj)
 - dependency pair: (25, ont, 23)
26. då (token 'då', head 'får väldigt ont', dependent type: mark)
 - dependency pair: (26, då, 23)

Now, here's how the elements can be mapped to a Python code that generates the dependency tree:

```python
# Swedish Sentence
sentence = "Även om det rör sig om att man som 2-åring lär sig att inte springa in ett träd för att man får väldigt ont då."

# Dependency Tree
dependency