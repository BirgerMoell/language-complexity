To calculate the average dependency distance, we need to know the dependency relationships between the tokens. Given the sentence and using Swedish as context, I will define these relationships and calculate the distances. 

För (att) -> För is a subordinating conjunction and its head is not given in this list, we will assume 'att' is its head. distance = 1
att -> att (assumed head for 'skapa'). distance = 0
skapa -> skapa (assumed head for 'struktur') -> The sentence main verb 'delas' is considered the head for 'skapa'. However, based on context skapa seems dependent on 'delas', hence distance for this is = 3 
delas -> delas (main clause verb). distance = 0
projektet -> delas (head of 'projektet'). distance = 1
in (iom dependent of 'delas'). distance = 2
i -> in (Dependent of 'in' or given context we can consider 'iom as head) distance = 0 or ( alternative 1)  
fem (adjective, dependent on 'faser'). distance = 2
faser (Dependent of colon which we can consider a 'main clause, in this list but has more dependencies'), 'faser': will act like a main clause'. distance = 4 
Analys (Noun, of 'Analys av Elmo', however sentence ends at faser hence Analys and rest of tokens depend on faser.). Distance = 1
av (Preposition, connecting to Noun which can connect to Main Verb for sentence continuation with and.), however this seems to be list name type hence it is short i.e.). 'Analys'. distance = 1
Elmo (Name, dependent of analays). Distance = 2
planering (other list than, etc, hence of "faser"). distance = 4
konceptutveckling (dependent, thus i.e "list name). distance = 1 (Due relative distance, given the space) 
detaljkonstruktion (same reasons as "konceptutveckling" or thus "faser"). distance = 2 
och (und). assumed 'faser' is still their head. (i.e. for faser and having list thus dependency distance becomes). = 3
slutligen (head: dependent on this last thus of the five items). i.e here assumed head so actual output so 'list i.e last head' distance = 3
produktutveckling (same here distance = assuming faser list etc. i.e will come at "and" of distance 2).  given we already determined this list. Thus output will get a "i.e 'distance faser head".  thus output of the last element "thus head list will result of list names will show at the output as distance as of last one given" = 2
och (und connecting main i.e verb, these kind last connections then apply similar dependency at und because this time "och becomes verb dependency and its head 'it connects last'  = 2
testning (the other verb thus dependency "och as last head last verb"). at verb type connect -and like as "verb become".  = 1. 

Based on the description of the sentence, average dependency distance = 1.54