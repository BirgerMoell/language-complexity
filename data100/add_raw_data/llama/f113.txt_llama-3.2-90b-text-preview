To calculate the average dependency distance, we need to first parse the sentence and identify the head of each token. Here is a possible parsing:

1. Några - head: virusmakare (dependent: modifier, dependency distance: 1)
2. virusmakare - head: svarade (dependent: subject, dependency distance: 1)
3. svarade - head: gör (dependent: verb phrase, dependency distance: 1)
4. själva - head: svarade (dependent: adverb, dependency distance: 1)
5. :- - head: Jag (dependent: interjection, dependency distance: 1)
6. Jag - head: gör (dependent: subject, dependency distance: 1)
7. gör - head: gör (dependent: main verb, dependency distance: 0)
8. det - head: gör (dependent: object, dependency distance: 1)
9. för - head: hitta (dependent: preposition, dependency distance: 2)
10. utmaningen - head: hitta (dependent: object of preposition, dependency distance: 3)
11. att - head: hitta (dependent: subordinating conjunction, dependency distance: 1)
12. hitta - head: gör (dependent: infinitive clause, dependency distance: 3)
13. det - head: hitta (dependent: object, dependency distance: 1)
14. optimala - head: uttrycket (dependent: modifier, dependency distance: 1)
15. uttrycket - head: hitta (dependent: object, dependency distance: 2)
16. för - head: hitta (dependent: subordinating conjunction, dependency distance: 1)
1'-> should be changed to' för-  17.head- hitta- for- dependent_object of subordinating conjunction -dependency_distance 4 
   1'-> changed
17. min - head: talang (dependent: modifier, dependency distance: 1)
18. talang - head: uttrycket (dependent: object of preposition, dependency distance: 3)
19. svarade - head: svarade (dependent: main verb, dependency distance: 0)
20. en - head: svarade (dependent: subject, dependency distance: 1)
21. ,-  head- att-  For- , (dependent_comma  dependency_distance1) ' should always placed before -att'
22. , head does not determine sentence structure in cases above hence_for most the remainder in  -dependent comma dependency_distance=1 ,For1 , changed  Here 
  , (dependent_comma dependency_distance=1)
 The   avg-d must be taken for all with _subordinate clauses- here  they have to be calculated- all_with e s _object dependency  of infinitv. clauses.
 The same e must also berealised_in  for_sobject the clause -determination- not_as- simple main head 

Add the absolute values of the dependency distances of all dependents and divide this by the number of dependent tokens to get the average dependency distance.

Dependency distances: 
absolute sum 26 

Tokens: 21
therefore is  
number of dependency relations =20 
 so dividing Dependency_distances_sum divided by_number_of_dependency relations  26
number_of_dependency relations 20.

26 /20 . and average_dependency_distance which is then being 
1.3