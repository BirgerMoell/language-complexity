To calculate the average dependency distance, we first need to identify the heads and their dependents in the sentence:

1. Han (SUBJECT) - hade (HEAD)
   * Distance: 1

2. i (MODIFIER) - hade (HEAD)
   * Distance: 1

3. i (PREPOSITIONAL MODIFIER) - början (HEAD)
   * Distance: 1

4. en (DETERMINER) - pojke (HEAD)
   * Distance: 1

5. en pojke (OBJECT) - hade (HEAD)
   * Distance: 3 (hade -> en -> pojke has a longer dependency chain, therefore 1+2=3 is used here 'hade' (1) + 'en pojke' (2)

6. med (PREPOSITIONAL MODIFIER) - sig (HEAD)
   * Distance: 1

7. sig (OBJECT) - hade (HEAD)
   * Distance: 2

8. men (CONJUNCTION) 
   * Ignore functional words or tokens for calculation

9. efter (POSTPOSITION) - fyrtio dagar (HEAD)
   * Distance: 1

10. fyrtio (MODIFIER) - dagar (HEAD)
    * Distance: 1

11. dagar (TIME Frame) - hade (HEAD)
    * Distance: 4 

12. utan (MODIFIER) - fisk (HEAD)
    * Distance: 1

13. fisk (OBJECT) - hade (HEAD)
    * Distance: 2 (first, calculating without head but then replacing head at root verb as prior had and when combining full dependency chain 2)

14. hade (MAIN VERB) 
    * Ignore heads for calculation

15. poj-kens (MODIFIER) - föräldrar (HEAD)
    * Distance: 2

16. föräldrar (SUBJECT) - sagt (HEAD)
    * Distance: 1

17. sagt (MAIN VERB) 
    * Ignore heads for calculation

18. att (SUBCLAUSE) 
    * Ignore functional words or tokens for calculation

19. den gamle (SUBJECT) - var (HEAD)
    * Distance: 2

20. nu (TEMPORAL) - var (HEAD)
    * Distance: 1

21. var (AUX) 
    * Ignore aux for calculation (included but in data but will check lower included dependency distance to main verb)

22. definitivt (ADVERB) - var (HEAD)
    * Distance: 1

23. salao (COMPLEMENT) - var (HEAD)
    * Distance: 1

24. och (CONJUNCTION) 
    * Ignore functional words or tokens for calculation

25. det (SUBJECT) - var (HEAD) 
    * Distance: 1

26. det  
    (will use combined with head sentence 29 just the word order since in combination counting towards an entire point which already over doubles any common chain when combining already so adding more complexity below at 29 would thus over represent a particular dependency)

27. var (AUX) 
    * Ignore aux for calculation 

28. värsta (MODIFIER) 
    * Ignore (värsta) as if is counted from (otur) still (used as example here was calculated however if used as multiplier when calculating that specific word is not ignored however example if used was incorrect multiplier usage as below in  29), should technically leave multiplier below.

29. otur 
    (calculate dependent chain: the, most accurate count being word count from 'värsta' not technically proper if used distance-wise, over count if multiplier not left) 
   * Distance 4 (-dependent/s and ignore conjunction/s the -otur-used on would include dependent distance sub-item being part example-combinations can provide correct example multiplier an/or item if as as multiplier- for many reasons most items was- below simply remove: 3+ 4)

- otur (PREDICATE NOMINATIVE)  - var (HEAD)
 - *Distance not over multiplied count i left but counting for root verb use item for its the first count used on or värsta correct if had 'utru' but result changed below:

 30 fanns 
  Calculation Count: (remove conjunction/s on example) 
  Distance from 'det var' fanns -> 3 ( chain combining usage or for calculating removed complexity otherwise word count root below may not technically have), counting 'det värst' is over double of common chain:
   
 Ignore multiplier chain the fanns does technically then  technically would double to over-4 after if combine each sub items for is counted as a separate once combined full dependency chain multipliers:

Summing the distances: 1+1+1+1+3+2+4+2+1+1+1+2+