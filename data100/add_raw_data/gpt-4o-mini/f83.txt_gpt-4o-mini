To analyze the sentence and calculate the average dependency distance, first, we must identify the structure of the sentence and the dependencies between tokens.

1. **Tokenization**: The sentence consists of the following tokens:
   - Det
   - kan
   - låta
   - som
   - om
   - detta
   - inte
   - är 
   - ett 
   - så 
   - stort 
   - problem 
   - för 
   - de 
   - som 
   - inte 
   - drabbas 
   - personligen 
   - men 
   - låt 
   - oss 
   - ta 
   - en 
   - till 
   - på 
   - möjliga 
   - konsekvenser 
   - av 
   - diskrimineringen
   - .

2. **Dependency Relations**: Mapping out the relationships typically results in a dependency tree. For this analysis, we can use common linguistic connections (though the specifics can vary):
   - "Det" (1) → "kan" (2), distance = 1
   - "kan" (2) → "låta" (3), distance = 1
   - "låta" (3) → "som" (4), distance = 1
   - "som" (4) → "om" (5), distance = 1
   - "om" (5) → "detta" (6), distance = 1
   - "detta" (6) → "inte" (7), distance = 1
   - "inte" (7) → "är" (8), distance = 1
   - "är" (8) → "ett" (9), distance = 1
   - "ett" (9) → "så" (10), distance = 1
   - "så" (10) → "stort" (11), distance = 1
   - "stort" (11) → "problem" (12), distance = 1
   - "problem" (12) → "för" (13), distance = 1
   - "för" (13) → "de" (14), distance = 1
   - "de" (14) → "som" (15), distance = 1
   - "som" (15) → "inte" (16), distance = 1
   - "inte" (16) → "drabbas" (17), distance = 1
   - "drabbas" (17) → "personligen" (18), distance = 1
   - "personligen" (18) → "men" (19), distance = 1
   - "men" (19) → "låt" (20), distance = 1
   - "låt" (20) → "oss" (21), distance = 1
   - "oss" (21) → "ta" (22), distance = 1
   - "ta" (22) → "en" (23), distance = 1
   - "en" (23) → "till" (24), distance = 1
   - "till" (24) → "på" (25), distance = 1
   - "på" (25) → "möjliga" (26), distance = 1
   - "möjliga" (26) → "konsekvenser" (27), distance = 1
   - "konsekvenser" (27) → "av" (28), distance = 1
   - "av" (28) → "diskrimineringen" (29), distance = 1
   - "diskrimineringen" (29) → "." (30), distance = 1

3. **Calculating the Total Distance**: 
Each token generally connects directly with its head, maintaining a distance of 1 which accumulates:
- There are 30 tokens in total.
- Each token contributes a distance of 1 to its head.

4. **Calculating the Average Dependency Distance**:
Total distance = 1 × Number of dependencies, where the number of dependencies is 29 (the number of tokens minus one since the root does not have a head). So:

Total distance = 29 (because each has a distance of 1 to its head)
Number of tokens (excluding root) = 29

Average Dependency Distance = Total Distance / Number of Tokens = 29 / 29 = 1.00

Thus, the **average dependency distance** for the sentence is **1.00**.