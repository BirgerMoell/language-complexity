To calculate the average dependency distance of the given Swedish sentence, we need to identify the dependencies and their corresponding distances.

1. Resultatet - av ( modifier, distance 1 )
2. arbetet - Resultatet (modifier, distance 2)
   arbetet - av ( modifier, indirect, already counted)
3. visar - Resultatet (does not have a direct and clear dependency but for the sake of dependency distance, we treat 'visar' as head of 'Resultatet', it should be mentioned this may not hold in all linguistic settings' usage thus from 'visar' is to head as well i.e  -   Resultatet  would have  distance of 2  )
4. det - att ( modifier, distance 1 )
5. finns - att ( modifier, distance 2 )
6. vissa - förutsättningar ( modifier, distance 1 )
7. tydliga - förutsättningar ( modifier, distance 2 )
8. förutsättningar - finns ( object, indirect but to simplify the counting it can be counted as 3)
9. inom - respektive (prepositional modifier, distance 1)
10. respektive - kategori ( modifier, distance 1 )
11. kategori -  inom ( indirect, but it is considered 3 from 'finns')
12. men - visar ( adversative conjunction, distance 5)
13. också -  att ( modifier, distance 1 )
14. att - många ( modifier distance 1, e.g 'there are...' will be counted as having same dependency head), 
15. faktorer - också ( as på samma sätt och)
16. avgörande - faktorer ( modifier, distance 1 )
17. eftersom - avgörande (sub Clause head distance 2)
18. AM - eftersom ( modifier, distance 2)
19. innefattar- AM ( no dependency on above mentioned sub tree object we must therefore take one level further in tree) (no clear dependency - modifier from elsewhere heading to eftersom via a pre modifier which had no given words AM  is object here counted to level i.e avgörande we do not count its premodifier )
20. flera - tekniker ( modifier, distance 1 )
21. tekniker -innefattar (object/dist indirect a level 4 to simplified counting directly)

These are the identified dependencies along with their distances. To calculate the average dependency distance, we sum all the distances and divide by the number of dependencies.

Total distance: 1 + 2 + 2 + 1 + 2 + 1 + 2 + 3 + 1 + 1 + 3 + 5 + 1 + 1 + 1 + 1 + 2 + 2 + 4 + 1 = 38
Number of dependencies: 20 

Average dependency distance: 38/20 = 1.9

Note that in some instances where a clear dependency is not directly available, some assumptions had to be made.