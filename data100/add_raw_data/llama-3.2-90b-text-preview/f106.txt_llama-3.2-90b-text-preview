To calculate the average dependency distance, we need to analyze the sentence and find the dependencies between the words.

Here is the sentence broken down into individual words and tokens:

1. Den
2. första
3. expansionen
4. Utbyggnaden
5. av
6. nätet
7. blev
8. enkelt
9. och
10. snabbt
11. för
12. att
13. man
14. inte
15. behövde
16. någon
17. speciell
18. datormodell
19. för
20. att
21. ansluta
22. sig
23. ,
24. det
25. enda
26. kravet
27. var
28. att
29. datorerna
30. kunde
31. kommunicera
32. med
33. varandra
34. .

Now, let's identify the dependencies between the words and calculate the distances.

1. Den -> expansionen (modification, distance 2)
2. första -> expansionen (modification, distance 1)
3. expansionen -> (no direct dependency, ignore)
4. Utbyggnaden -> blev (subject, distance 3, consider Utbyggnaden as a noun here to simplify, it can also be interpreted as expansionen Utbyggnaden)
   Expansionen -> Utbyggnaden (modification, distance 1, indirect to blev in this description)
5. av -> nätet (dependency through 'Utbyggnaden', ignore direct dependency on av in this calculation. Alternatively it could be considered as av -> Utbyggnaden. But this changes the meaning)
6. nätet -> (no direct dependency, ignore)
7. blev -> (main verb)
8. enkelt -> blev (adverb, distance 2 as it is considered modifying 'blev enkelt och snabbt')
9. och -> (conjunction)
10. snabbt -> blev (adverb, distance 3)
11. för -> att (subordinating conjunction, distance 1)
12. att -> (no direct dependency, ignore, as one would assume a clause relationship denoted as expansion on 'for')
13. man -> (no direct dependency, ignore. Alternatively one could say and hence man -> (becomes dependent on some part else considering alternative explanation))
14. inte -> behövde (negation, distance 1)
15. behövde -> att (consider main clause dependency on it as dependency - becomes secondary and tertiary or at best higher on the chain hence becoming -2)
16. någon -> datormodell (modification, distance 2)
17. speciell -> datormodell (modification, distance 1)
18. datormodell -> (dependency on some else - ignore direct - alternatively one would assign datormodell-> för ( dependency distance would hence rather complex given a potential use of conjunction  hence rather -(3 rather, considering on surface using för hence before conjunction denoting dependency of certain case expansion, explanation expansion, modification expansion...))
19. för -> att (subordinating conjunction, distance 1)
20. att -> ansluta (dependency on verbs -> indirect att -> behövde distance -1 or could as well now analyze being  to as sub junctor expanding or advancing  thus here, but thus sub-expanding att -1 is negating certain higher values thus dependency as negating one between negating values in being some other level thus negating negating which comes on the higher dependency value dependency hence counting -(- rather other neg -> neg lower case lower))
21. ansluta -> (dependency on previous, primary, clause dependency though which is verbs hence verb with modifiers thus consider ansluta to the 'sig' clause)
22. sig -> ansluta (object pronoun/reflective pronoun, distance 1)
23. , -> (no dependency, ignore)
24. det -> kravet (modification, distance 2)
25. enda -> kravet (modification, distance 1)
26. kravet -> var (subject, distance 2)
27. var -> (main verb)
28. att -> (no direct dependency, ignore)
29. datorerna -> kunde (subject, distance 2)
30. kunde -> (no direct dependency, ignore. Alternatively one would assign - becoming rather main if and hence previous dependency here for its conjunction sub to datorerna with kunde- modifier and the verb 'en action on kunde, an action or state to kunde although action should equal dependency at its one or by action and state kunde being main)
31. kommunicera -> kunde (action verb, distance 1)
32. med -> kommunicera (dependency for subject action preposition - or is object