To calculate the average dependency distance, we first need to identify the dependencies between tokens in the sentence and calculate their distances. Here's a step-by-step analysis of the sentence:

1. Ledarna (token 1) -> började (token 2, distance: 1)
2. började (token 2) -> få (token 3, distance: 1)
3. få (token 3) -> smak (token 6, distance: 3, as "på" and "att" are in between)
4. smak (token 6) -> på (token 5) has a reverse dependency, so ignore it for this calculation
5. smak (token 6) -> utvidga (token 8, distance: 2, as "på", "att" are in between)
6. på (token 5) -> att (token 6 has a dependency, ignore it for this calculation)
7. att (token 6) -> utvidga (token 8, distance: 2)
8. utvidga (token 8) -> sitt (token 9, distance: 1)
9. sitt (token 9) -> lands (token 10, distance: 1)
10. lands (token 10) -> möjligheter (token 11, distance: 1)
11. möjligheter (token 11) -> och (token 12, distance: 1)
12. och (token 12) is a conjunction, it has multiple children, thus they are equal distance from 'och' for the calculation purposes.
   Since these children 'ville' and 'ville inte bara öka ...' constitute two different clauses. But 'ville' has a main dependency, whilst the 'ville inte bara öka ...' is the second. Thus 'ville' has distance 1 from 'och' and distance from the tokens of second clause will be, 
   As it turns out these tokens should have their own average dependency from the token's main verb. Ignore them for now.
13. ville (token 13) -> anda (token 20, distance: 7)
14. It is apparent from the context that "inte bara öka landets ekonomiska tillväxt" is a long list, 
    although some verbs may skip some of them like 'bara'. Generally ignore these tokens, and as multiple tokens may participate in a conjunction of dependency or some not having.
    Here I only consider the final object, hence distance between  'ville' and the objects below
15. ville (token 13) -> öka (token 14, distance: 1)
16. ville (token 13) -> landets (token 16, distance: 3)
17. landets (token 16) -> ekonomiska (token 17, distance: 1)
18. ekonomiska (token 17) -> tillväxt (token 18, distance: 1)
19. ville (token 13) -> och (token 20, distance: 7)
20. och (token 20) has the same issue, because of conjunction on child 1 and on all the others, I can just look at the head of the other, and so all other objects have equal distance.
21. och (token 20) equal dependency distances using main as landets -> and the main head of landets will dictate how much the words after the comma have.
   Because multiple verbs can apply (as each main verbs can send equal amounts ie value one), I can assume the only necessary requirements are 'möjligheter'. which becomes 
   möjligheter (token 11) -> och (token 20 is ignored the dependency) is the base case.
22. och (token 20) has same case of villie with anda.
   'anda' is a word, and will remain ignored (punctuation token  is unmarked). because many token distance has been used as all punctuation 
    has been taken. See commas, exclamation marks below.
23. öka (token 14) list of those möjligheter also dictate dependency, there are certain items dependent and equal ones not seen.
24. and dependency are shown within equal number without exclamation (showed also higher by means given)
25. Main object of 'ville' (token 13), is mentioned below to dictade and provide equal value by öka. All this does as the whole part without landets for each requirement like:
  a land's values.
 25. We will still try it as möjligheter can be an other i.e. another word
    Assume other as as multiple and will dictate using land values also distance.
26. alla tokens also should exclude everything which takes into account the real values from the first so you can see main:
  the value dependency will follow from our words