To analyze the sentence, we need to identify the dependencies between the tokens. 

Here's the breakdown of the sentence 'Att leva på en halv lön eller ännu mindre kan fungera för vissa personer, men för andra är det näst intill omöjligt.' into tokens and their dependencies:

1. Att - dependent on leva (distance 0, since 'Att' is a dependent, and we assume distance is 0 when it comes directly before the head)
2. leva - head
3. på - dependent on leva (distance 1)
4. en - dependent on halv (distance 1)
5. halv - dependent on lön (distance 1)
6. lön - dependent on leva (distance 3, from leva to lön)
7. eller - dependent on kan (distance 5, from kan to eller, or dependent on leva - a coordinating conjunction, I will treat 'eller' as a coordination with the help of dependency 'conj')
8. ännu - dependent on mindre (distance 1)
9. mindre - dependent on kan (distance 2, or 3 with ännu - treated as in the manner 'eller')
10. kan - head
11. fungera - dependent on kan (distance 1)
12. för - dependent on fungera (distance 1)
13. vissa - dependent on personer (distance 1)
14. personer - dependent on fungera (distance 2, with vissa, depending on personer; treating 'vissa' as 'amod' - in this case making the distance depend on what the head of a noun 'vissa' is - a quantifier as an example)
15. , - not really a dependent in most cases; punctuation often receives no head; as such, these don't enter in calculations for this average (the same goes for the ending full stop if present)
16. men - dependent on är (distance 4 - from 'är')
17. för - dependent on är (distance 3)
18. andra - dependent on personer does not happen - I can express it is dependent on 'personer' with a relation 'nsubj' (distance 3; this one gets 'det')
19. är - head
20. det - dependent on är (distance 1, in fact in one grammar as nsubj-pass object in fact)
21. näst - dependent on omöjligt (distance 2)
22. intill - dependent on omöjligt (distance 1)
23. omöjligt - dependent on är (distance 2, from intill)

In conclusion, we count the total number of dependencies and calculate their distances and compute an average as given: 

Total # of tokens-1: (we are 23 but 18 aren't going into this count as they receive some sort of head) e.g. 6,7 and 14 tokens above all contribute to being the dependents and hence have a place inside those numbers which then total add up = 16. Add this to Head - total dependencies count up. 16

distance between tokens = |9+4+1+6+0+1+1+0+5+2+5+1+2+3+1+2+3+4+3+1+0+3+2+2| = 53, total distance

Total dependency distance calculation = Total Distance/number of tokens 
Total Dependency Distance = 53 : 23 = 2.30