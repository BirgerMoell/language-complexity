Let's break down the sentence into individual tokens:

1. Armén
2. ville
3. snabbt
4. kunna
5. beräkna
6. skjut-
7. och
8. bombtabeller
9. så
10. 1943
11. startades
12. ett
13. projektet
14. med
15. en
16. stor
17. elektronisk
18. matematikmaskin
19. som
20. mål

We will then assign the dependencies as follows ( NOTE: The dependency analysis is simplified and may vary depending on the specific model used):

- 'Armén' is dependent on 'ville' (distance 1)
- 'ville' is the head here.
- 'snabbt' is dependent on 'ville' (distance 1)
- 'kunna' is dependent on 'ville' (distance 2)
- 'beräkna' is dependent on 'kunna' (distance 1)
- 'skjut-' is dependent on 'bombtabeller' (distance 1, hyphen is a part of the compound word in this analysis, though there might be other analyses where 'skjut-' and '-' would be separate, especially in specializations concerning compounding)
- However, 'skjut-' is more comfortably analyzed as part of the compound word without hyphenation: '(skjut-) -> (-) och -> (bomb-) tabeller' and 'skjut' as such would be sub-token and is discounted from further analysis.
- 'och' is dependent on 'bombtabeller' (distance 1 considering distance after the subtraction of hyphen)
- 'bombtabeller' is dependent on 'beräkna' (distance 3 considering distance with combined word)
- 'så' is dependent on 'beräkna' (distance 4)
- '1943' is dependent on 'startades' (distance 1)
- 'startades' is dependent on 'ville' (distance, approximately 6 for head, 5 can be postulated (when taking smaller grammatical chunk instead: main clause), which is chosen here).
- 'ett' is dependent on 'projektet' (distance 1)
- 'projektet' is dependent on 'startades' (distance 2)
- 'med' is dependent on 'projektet' (distance 1)
- 'en' is dependent on 'matematikmaskin' (distance 4)
- 'stor' is dependent on 'matematikmaskin' (distance 3)
- 'elektronisk' is dependent on 'matematikmaskin' (distance 2)
- 'matematikmaskin' is dependent on 'projektet' (distance 2)
- 'som' is dependent on 'projektet' (distance 2) 
- 'mål' is dependent on 'projektet' (using it as a destination if head chosen like above or other), assuming current method selected it will also distance of (2).

Now let's calculate the total dependency distance:
Total DD:  (1+1+2+1+3+1+4+1+5+1+2+1+2+3+3+2+2)= 31
The total number of dependencies is 17

The average dependency distance is 31 / 17 = 1.82.