To analyze the given Swedish sentence "PLATS OCH PROGRAM Projektet är en grundskola med 300 elever i årskurserna 1-6 fördelade på två klasser per årskurs." and produce a dependency tree, we can break it down as follows:

1. Identify the tokens: 
   - PLATS
   - OCH
   - PROGRAM
   - Projektet
   - är
   - en
   - grundskola
   - med
   - 300
   - elever
   - i
   - årskurserna
   - 1-6
   - fördelade
   - på
   - två
   - klasser
   - per
   - årskurs
   - .

2. Determine the head for each token:
   - PLATS (1) → OCH (2)
   - OCH (2) → PROGRAM (3)
   - PROGRAM (3) → Projektet (4)
   - Projektet (4) → är (5)
   - är (5) → grundskola (6)
   - grundskola (6) → en (7)
   - en (7) → med (8)
   - med (8) → elever (9)
   - elever (9) → 300 (10)
   - i (11) → årskurserna (12)
   - årskurserna (12) → fördelade (13)
   - fördelade (13) → på (14)
   - på (14) → klasser (15)
   - klasser (15) → två (16)
   - två (16) → per (17)
   - per (17) → årskurs (18)
   - årskurs (18) → . (19)

3. Construct the output format: 

Here is the resulting dependency tree:

```
[
(1, PLATS, 2),
(2, OCH, 3),
(3, PROGRAM, 4),
(4, Projektet, 5),
(5, är, 6),
(6, grundskola, 7),
(7, en, 8),
(8, med, 9),
(9, 300, 10),
(10, elever, 11),
(11, i, 12),
(12, årskurserna, 13),
(13, fördelade, 14),
(14, på, 15),
(15, klasser, 16),
(16, två, 17),
(17, per, 18),
(18, årskurs, 19),
(19, ., 5)
]
``` 

Note that I've assigned the head indices based on the syntactic structure of the sentence, while respecting the order of the tokens.