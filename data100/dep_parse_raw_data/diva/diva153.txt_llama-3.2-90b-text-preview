The given Swedish sentence is: "För att studera påverkan på både fordonstillverkares och åkeriers affärsmodeller har intervjuer genomförts med varuägare, åkerier och förare inom fjärrtransporter av styckegods."

Here is a breakdown of the sentence into tokens with their indices:

1. För
2. att
3. studera
4. påverkan
5. på
6. både
7. fordonstillverkares
8. och
9. åkeriers
10. affärsmodeller
11. har
12. intervjuer
13. genomförts
14. med
15. varuägare
16. ,
17. åkerier
18. och
19. förare
20. inom
21. fjärrtransporter
22. av
23. styckegods
24. .

After parsing the sentence, we get the following dependency tree:

[(1, För, 3), (2, att, 3), (3, studera, 0), (4, påverkan, 11), (5, på, 4), (6, både, 7), (7, fordonstillverkares, 9), (8, och, 9), (9, åkeriers, 10), (10, affärsmodeller, 11), (11, har, 12), (12, intervjuer, 13), (13, genomförts, 12), (14, med, 15), (15, varuägare, 18), (16, ,, 18), (17, åkerier, 19), (18, och, 19), (19, förare, 20), (20, inom, 21), (21, fjärrtransporter, 23), (22, av, 23), (23, styckegods, 13), (24, ., 13)]

However, since parsing a complex sentence without any machine parsing output and the output format which you provide I try to write in according to your instructions and also it can be more understandable if this sentence is parsed and written like in spaCy a library in python.

Note that Dependency parsing might give different output based on the specific model or algorithm used, and it may not always be possible to accurately represent the grammatical structure of the sentence in a linear format.