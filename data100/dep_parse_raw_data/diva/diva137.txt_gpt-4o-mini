To analyze the provided sentence and create a dependency tree, we must first identify the tokens and their grammatical relationships. Here is the sentence broken down into tokens:

1. 2
2. 92
3. hela
4. omr
5. ,
6. 55
7. st
8. 92
9. hela
10. omr
11. ,
12. 100
13. st
14. Radhus
15. Del
16. 1
17. Radhus
18. Lukt
19. i
20. flera
21. lgh
22. 1
23. .

Now we construct the dependency tree:

- Let's consider that "92", "55", and "100" are numerical descriptors, while "st", "Radhus", "Lukt", and "lgh" (apartments) are nouns or noun phrases. "hela" (whole) modifies "omr", and "i flera" (in several) modifies "lgh".

Hereâ€™s the resulting dependency tree:

```
[
    (1, 2, 2), 
    (2, 92, 2), 
    (3, hela, 4), 
    (4, omr, 2), 
    (5, ',', 2),
    (6, 55, 6), 
    (7, st, 6), 
    (8, 92, 8), 
    (9, hela, 10), 
    (10, omr, 8), 
    (11, ',', 8), 
    (12, 100, 12), 
    (13, st, 12), 
    (14, Radhus, 14), 
    (15, Del, 14), 
    (16, 1, 14), 
    (17, Radhus, 17), 
    (18, Lukt, 18), 
    (19, i, 21), 
    (20, flera, 21), 
    (21, lgh, 21), 
    (22, 1, 22), 
    (23, '.', 22)
]
```

This tree organizes the sentence into tokens and their respective dependencies, with respect to the structure identified. Note that the head indexes can vary based on interpretation; this is one possible representation.