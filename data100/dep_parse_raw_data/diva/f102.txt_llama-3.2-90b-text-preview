To generate the dependency tree for the given Swedish sentence, I'll first tokenize the sentence and then analyze the grammatical structure. Here's the tokenized sentence:

1. beskriv
2. krypteringsprogramet
3. pgp
4. PGP
5. är
6. ett
7. av
8. de
9. populäraste
10. krypterings
11. program
12. pretty
13. good
14. privacy
15. den
16. arbetar
17. med
18. komplexa
19. algoritmer
20. som
21. gör
22. informationen
23. kan
24. få
25. en
26. hög
27. nivå
28. av
29. säkerhet
30. nära
31. på
32. militära
33. säkerhets
34. nivåer,
35. programet
36. kunna
37. ge
38. privatpersoner
39. och
40. företag
41. samma
42. säkerhet.

Now, I'll generate the dependency tree for the sentence. Please note that this will be a simplified representation, and actual dependencies may be more complex or nuanced.

Dependency Tree:
[(1, beskriv, 0),
 (2, krypteringsprogramet, 5),
 (3, pgp, 4),
 (4, PGP, 5),
 (5, är, 0),
 (6, ett, 9),
 (7, av, 9),
 (8, de, 9),
 (9, populäraste, 5),
 (10, krypterings, 11),
 (11, program, 5),
 (12, pretty, 14),
 (13, good, 14),
 (14, privacy, 11),
 (15, den, 16),
 (16, arbetar, 5),
 (17, med, 19),
 (18, komplexa, 19),
 (19, algoritmer, 16),
 (20, som, 21),
 (21, gör, 16),
 (22, informationen, 21),
 (23, kan, 24),
 (24, få, 21),
 (25, en, 26),
 (26, hög, 27),
 (27, nivå, 21),
 (28, av, 27),
 (29, säkerhet, 21),
 (30, nära, 32),
 (31, på, 32),
 (32, militära, 29),
 (33, säkerhets, 32),
 (34, nivåer, 29),
 (34, nivåer, 35),
 (35, programet, 37),
 (36, kunna, 37),
 (37, ge, 0),
 (38, privatpersoner, 39),
 (39, och, 38),
 (40, företag, 38),
 (41, samma, 42),
 (42, säkerhet, 37)]

In the above output, each entry in the list represents a dependency relationship, where:
- The first element of the tuple represents the token index.
- The second element is the token itself.
- The third element is the head token index, where '0' represents the root of the tree (the main predicate of the sentence).

Please note that the generated dependency tree is based on my interpretation and a simplified model. An actual parser may produce a more complex or nuanced output.