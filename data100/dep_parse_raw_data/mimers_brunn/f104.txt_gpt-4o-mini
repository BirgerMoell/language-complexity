To analyze the provided Swedish sentence and produce the dependency tree, we can break down the sentence into its constituent parts and identify the head of each token.

The sentence is:
"Oftast så kommer virus till din dator genom Internet, men kan också spridas över sekundära lagringsmedium såsom disketter, CD/DVD/MD skivor, minnen ect…."

The dependency structure can be represented as follows:

1. Oftast - 2
2. så - 3
3. kommer - 0
4. virus - 3
5. till - 6
6. din - 7
7. dator - 5
8. genom - 9
9. Internet - 8
10. , - 3
11. men - 12
12. kan - 3
13. också - 14
14. spridas - 12
15. över - 16
16. sekundära - 17
17. lagringsmedium - 15
18. såsom - 19
19. disketter - 18
20. , - 12
21. CD/DVD/MD - 22
22. skivor - 21
23. , - 12
24. minnen - 26
25. ect - 12
26. … - 12

Now, we can form the dependency list accordingly:

```plaintext
[
    (1, Oftast, 2),
    (2, så, 3),
    (3, kommer, 0),
    (4, virus, 3),
    (5, till, 6),
    (6, din, 7),
    (7, dator, 5),
    (8, genom, 9),
    (9, Internet, 8),
    (10, ,, 3),
    (11, men, 12),
    (12, kan, 3),
    (13, också, 14),
    (14, spridas, 12),
    (15, över, 16),
    (16, sekundära, 17),
    (17, lagringsmedium, 15),
    (18, såsom, 19),
    (19, disketter, 18),
    (20, ,, 12),
    (21, CD/DVD/MD, 22),
    (22, skivor, 21),
    (23, ,, 12),
    (24, minnen, 26),
    (25, ect, 12),
    (26, …, 12)
]
```

In this output, the structure captures the relationships between words, with the head tokens accurately reflecting their connections.