To create a dependency tree for the given sentence, we will use the following labels:
- ROOT: The root of the sentence.
- NMOD: Nominal modifier, such as adjectives or possessive noun phrases.
- OBJ: Direct object.
- ADV: Adverb or adverbial phrase modifier.
- CCONJ: Coordinating conjunction.
- NSUBJ: Nominal subject.
- APP: Appositive modifier.
- CMOD: Clausal modifier.
- DEP: General dependency (used for the punctuations).

The given sentence: 
"En fisk har en strömformad kropp anpassad för ett liv i vatten, sidolinjesystem som fungerar som ett sjätte sinne som känner av tryckförändringarna i omgivningen och så har de parvis fenor som fungerar som stabilisatorer och som hjälper de att simma."

Here is the dependency tree:

[(1, En, 2), (2, fisk, 3), (3, har, 0), (4, en, 5), (5, strömformad, 6), (6, kropp, 7), (7, anpassad, 3), (8, för, 9), (9, ett, 10), (10, liv, 9), (11, i, 10), (12, vatten, 10), (13, ,, 12), (14, sidolinjesystem, 15), (15, som, 17), (16, fungerar, 15), (17, som, 20), (18, ett, 19), (19, sjätte, 20), (20, sinne, 21), (21, som, 23), (22, känner, 21), (23, av, 24), (24, tryckförändringarna, 22), (25, i, 24), (26, omgivningen, 25), (27, och, 28), (28, så, 0), (29, har, 28), (30, de, 29), (31, parvis, 32), (32, fenor, 33), (33, som, 35), (34, fungerar, 33), (35, som, 38), (36, stabilisatorer, 35), (37, och, 38), (38, som, 39), (39, hjälper, 29), (40, de, 41), (41, att, 42), (42, simma, 39), (43, ., 0)]

Note that some tokens in this dependency tree could be represented with more specific labels or sublabels, depending on the complexity of the parsing model used. The following abbreviations were used for brevity:

* NMOD (Nominal modifier) - includes adjectives and other nominal modifiers.
* OBJN (Object noun phrase modifier) - is replaced by 'OBJ' in this simple representation.
* SUB (Subordinating conjunction) - is replaced by 'CMOD' for simplicity.

For creating dependency trees, there are libraries available that can analyze the grammatical dependencies in the sentence and create a more specific tree. One popular library is the spaCy library in Python.