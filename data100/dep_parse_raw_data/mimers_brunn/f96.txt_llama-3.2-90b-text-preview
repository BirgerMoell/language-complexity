To create a dependency tree from the given Swedish sentence, we first need to identify the individual tokens and their parts of speech. Here is the tokenized sentence with part of speech tags:

1. Detta (PRON) - this
2. är (V) - is
3. bra (ADJ) - good
4. att (INF) - to
5. veta (INF) - know
6. så (ADV) - so
7. att (INF) - to
8. man (PRON) - one
9. inte (ADV) - not
10. står (V) - stand
11. där (ADV) - there
12. med (ADP) - with
13. exempelvis (ADV) - for example
14. en (DET) - a
15. scanner (N) - scanner
16. som (PR) - that
17. man (PRON) - one
18. köpt (V) - bought
19. , - COMMA
20. och (CONJ) - and
21. kommer (V) - comes
22. på (ADP) - on
23. att (INF) - to
24. moderkortet (N) - the motherboard
25. inte (ADV) - not
26. har (V) - has
27. plats (N) - space
28. för (ADP) - for
29. flera (DET) - several
30. kort (N) - cards
31. , - COMMA
32. som (PR) - that
33. vissa (DET) - some
34. scanners (N) - scanners
35. kräver (V) - require

The next step is to identify the dependencies between tokens. The result is the following dependency tree:

[(1, Detta, 2), 
(2, är, 0), 
(3, bra, 2), 
(4, att, 5), 
(5, veta, 2), 
(6, så, 7), 
(7, att, 8), 
(8, man, 10), 
(9, inte, 10), 
(10, står, 21), 
(11, där, 10), 
(12, med, 15), 
(13, exempelvis, 15), 
(14, en, 15), 
(15, scanner, 10), 
(16, som, 17), 
(17, man, 18), 
(18, köpt, 15), 
(19, ,-1), 
(20, och, 21), 
(21, kommer, 0), 
(22, på, 24), 
(23, att, 21), 
(24, moderkortet, 26), 
(25, inte, 26), 
(26, har, 21), 
(27, plats, 26), 
(28, för, 30), 
(29, flera, 30), 
(30, kort, 26), 
(31, ,-1), 
(32, som, 33), 
(33, vissa, 34), 
(34, scanners, 35), 
(35, kräver, 26)]

Please note that a few assumptions were made in this analysis. The coordination relationships (e.g., 'och' in "man inte står där med exempelvis en scanner som man köpt, och ...") may not be fully captured in this tree. 

And also certain relationships between words, which are not immediately apparent (like the 'comma' being dependent on '-1', or the implicit node representing a whole clause/subsentence), have been simplified.