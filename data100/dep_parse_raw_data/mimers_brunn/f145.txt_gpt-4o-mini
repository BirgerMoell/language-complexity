To create a dependency tree from the provided Swedish sentence, we first tokenize it and identify the head relationships. Here is the output formatted as you specified:

```
[(1, Eftersom, 2), 
 (2, att, 3), 
 (3, det, 5), 
 (4, är, 5), 
 (5, så, 6), 
 (6, många, 7), 
 (7, som, 8), 
 (8, vill, 9), 
 (9, flytta, 10), 
 (10, in, 0), 
 (11, till, 12), 
 (12, städerna, 10), 
 (13, ,, 2), 
 (14, har, 15), 
 (15, man, 0), 
 (16, inte, 15), 
 (17, hunnit, 15), 
 (18, bygga, 19), 
 (19, det, 21), 
 (20, antal, 21), 
 (21, hus, 18), 
 (22, som, 23), 
 (23, behövs, 21), 
 (24, för, 25), 
 (25, att, 26), 
 (26, alla, 29), 
 (27, ska, 29), 
 (28, få, 29), 
 (29, ett, 30), 
 (30, hem, 24), 
 (31, och, 33), 
 (32, det, 33), 
 (33, är, 34), 
 (34, ett, 36), 
 (35, skäl, 34), 
 (36, till, 38), 
 (37, varför, 36), 
 (38, många, 39), 
 (39, bor, 40), 
 (40, utanför, 41), 
 (41, städerna, 40), 
 (42, i, 43), 
 (43, enkla, 45), 
 (44, hus, 43), 
 (45, som, 46), 
 (46, är, 44), 
 (47, byggda, 48), 
 (48, av, 49), 
 (49, pinnar, 47), 
 (50, och, 51), 
 (51, andra, 52), 
 (52, växter, 47), 
 (53, ., 2)]
```

Here each tuple represents (token index, token, head token index), where the head token index is 0 if the token is the root of the sentence.