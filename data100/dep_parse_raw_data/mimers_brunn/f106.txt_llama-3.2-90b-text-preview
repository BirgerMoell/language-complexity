After analyzing the given Swedish sentence, I will provide you with the dependency tree. However, please note that this tree might not be perfect, as I'm not using a machine learning model or any NLP library for this task. I'll be analyzing the sentence manually.

The given sentence is:
"Den första expansionen. Utbyggnaden av nätet blev enkelt och snabbt för att man inte behövde någon speciell datormodell för att ansluta sig, det enda kravet var att datorerna kunde kommunicera med varandra."

Here is the tokenized version of the sentence with punctuation:
1. Den
2. första
3. expansionen
4. Utbyggnaden
5. av
6. nätet
7. blev
8. enkelt
9. och
10. snabbt
11. för
12. att
13. man
14. inte
15. behövde
16. någon
17. speciell
18. datormodell
19. för
20. att
21. ansluta
22. sig
23. det
24. enda
25. kravet
26. var
27. att
28. datorerna
29. kunde
30. kommunicera
31. med
32. varandra
33. .

Now, let's create the dependency tree:

- [(1, Den, 3)]
- [(2, första, 3)]
- [(3, expansionen, 0)]
- [(4, Utbyggnaden, 7)]
- [(5, av, 7)]
- [(6, nätet, 7)]
- [(7, blev, 0)]
- [(8, enkelt, 7)]
- [(9, och, 10)]
- [(10, snabbt, 7)]
- [(11, för, 12)]
- [(12, att, 15)]
- [(13, man, 15)]
- [(14, inte, 15)]
- [(15, behövde, 0)]
- [(16, någon, 18)]
- [(17, speciell, 18)]
- [(18, datormodell, 15)]
- [(19, för, 20)]
- [(20, att, 21)]
- [(21, ansluta, 15)]
- [(22, sig, 15)]
- [(23, det, 26)]
- [(24, enda, 25)]
- [(25, kravet, 26)]
- [(26, var, 0)]
- [(27, att, 29)]
- [(28, datorerna, 29)]
- [(29, kunde, 30)]
- [(30, kommunicera, 26)]
- [(31, med, 30)]
- [(32, varandra, 30)]
- [(33, ., 0)]

This tree is in no way exhaustive, and its quality may vary depending on the actual parsing model used. Please note that creating a perfect dependency tree requires an in-depth knowledge of the Swedish language, context, and linguistics.