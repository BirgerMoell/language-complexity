To create a dependency tree for the given sentence, I will analyze the grammatical structure and relations between the tokens. Here is a breakdown of the sentence:

1. Besöker ( Verb, action - visits)
2. du (Pronoun, subject - you)
3. en (Determiner - a/an)
4. sida (Noun, object - page/site)
5. om (Preposition - about)
6. till exempel (Adverbial phrase - for example)
7. antivirus (Adjective - antivirus)
8. program (Noun - software/program)
9. kan (Verb, auxiliary - can/may)
10. det (Pronoun, subject - it)
11. hända (Verb - happen)
12. att (Conjunction - that)
13. det (Pronoun, subject - it)
14. kommer (Verb - comes)
15.upp (Adverb - up)
16. ett (Determiner - a/an)
17. litet (Adjective - small)
18. fönster (Noun - window)
19. som (Conjunction - that)
20. tipsar (Verb - tips/ advises)
21. om (Preposition - about)
22. andra (Adjective - other)
23. antivirus (Adjective - antivirus)
24. program (Noun - software/program)

Here is the dependency tree:
[(1, Besöker, 0), 
 (2, du, 1), 
 (3, en, 4), 
 (4, sida, 1), 
 (5, om, 8), 
 (6, till, 7), 
 (7, exempel, 6), 
 (7, exempel, 8), 
 (8, antivirus, 9), 
 (9, program, 1), 
 (10, kan, 11), 
 (11, det, 11), 
 (12, hända, 10), 
 (13, det, 14), 
 (14, kommer, 11), 
 (15, upp, 14), 
 (16, ett, 18), 
 (17, litet, 18), 
 (18, fönster, 14), 
 (19, som, 20), 
 (20, tipsar, 14), 
 (21, om, 24), 
 (22, andra, 23), 
 (22, andra, 24), 
 (23, antivirus, 24), 
 (24, program, 20),
 (0, ., 0)] 

In this analysis, I assume the sentence is declarative and therefore its main clause should have no head, although for a complete dependency analysis the sentence should be taken as root of the parse tree which will have sentence "0" as root, although not being a token per se, hence I will represent it with `(0, ., 0)` according to your notation, in which main verb should have sentence as its head in order to close the tree.