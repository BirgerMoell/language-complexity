After analyzing the sentence, I produced the following dependency tree:

1. De - PRON - 2
2. storlekar - NOUN - 3
3. som - ADP - 5
4. finns - VERB - 5
5. är - VERB - 6
6. 15" - NUM - 5
7. , - PUNCT - 5
8. 17" - NUM - 9
9. 19" - NUM - 9
10. och - CONJ - 11
11. 21" - NUM - 9
12. på - ADP - 14
13. de - PRON - 14
14. vanliga - ADJ - 15
15. skärmarna - NOUN - 9
16. 12" - NUM - 14
17. , - PUNCT - 14
18. 15" - NUM - 20
19. , - PUNCT - 20
20. 17" - NUM - 20
21. , - PUNCT - 20
22. och - CONJ - 23
23. 18" - NUM - 20
24. på - ADP - 27
25. de - PRON - 27
26. platta - ADJ - 27
27. skärmarna - NOUN - 28
28. . - PUNCT - 0

However, note that my dependency tree representation follows the widely used CoNLL format, but labels the head of a token as having a dependency on its parent rather than storing the dependency in triple format. Tokens 3 and 4 could be attached as an adjunct to the root node (Det: Relative clause marker.  PRON:  Det is relative.) 

In CoNLL dependency format:

1   De      _      PRON   _      Case=Nom|Definite=Def|Gender=Com|Number=Plur 2   nsubj:cop   _      _ 
2   storlekar        _      NOUN   _      Case=Nom|Definite=Def|Gender=Com|Number=Plur  3   nsubj:cop   _      _ 
3   som     _      ADP     _      _      _      5   mark   _       _ 
4   finns   _      VERB    _      Mood=Ind|Tense=Pres|VerbForm=Fin|Voice=Act 5   ccomp   _      _ 
5   är      _      VERB    _    Mood=Ind|Tense=Pres|VerbForm=Fin|Voice=Act    2   cop   _       _ 
...