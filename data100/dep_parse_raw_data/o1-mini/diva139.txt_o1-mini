Sure! Let's analyze the Swedish sentence:

**Sentence:**
```
I den har jag endast tagit med totalsumman samt markeringen av de tre högsta talen.
```

### Tokenization
We first tokenize the sentence, including punctuation:

1. I
2. den
3. har
4. jag
5. endast
6. tagit
7. med
8. totalsumman
9. samt
10. markeringen
11. av
12. de
13. tre
14. högsta
15. talen
16. .

### Dependency Parsing
Below is the dependency tree represented as triples `(index, token, head index)`:

1. **(1, I, 2)**  
   - *I* is a preposition modifying *den*.

2. **(2, den, 6)**  
   - *den* is a determiner connected to *tagit*.

3. **(3, har, 6)**  
   - *har* is an auxiliary verb connected to *tagit*.

4. **(4, jag, 6)**  
   - *jag* (I) is the subject of *tagit*.

5. **(5, endast, 6)**  
   - *endast* (only) is an adverb modifying *tagit*.

6. **(6, tagit, 0)**  
   - *tagit* (taken) is the root of the sentence.

7. **(7, med, 6)**  
   - *med* (with) is a preposition connected to *tagit*.

8. **(8, totalsumman, 7)**  
   - *totalsumman* (total sum) is the object of *med*.

9. **(9, samt, 8)**  
   - *samt* (and) is a conjunction connecting *totalsumman* and *markeringen*.

10. **(10, markeringen, 9)**  
    - *markeringen* (marking) is connected via *samt*.

11. **(11, av, 10)**  
    - *av* (of) is a preposition connected to *markeringen*.

12. **(12, de, 15)**  
    - *de* (the) is a determiner for *talen*.

13. **(13, tre, 15)**  
    - *tre* (three) is a numerical modifier for *talen*.

14. **(14, högsta, 15)**  
    - *högsta* (highest) is an adjective modifying *talen*.

15. **(15, talen, 11)**  
    - *talen* (numbers) is the object of *av*.

16. **(16, ., 6)**  
    - Punctuation *.* is connected to the root *tagit*.

### Dependency Tree Representation
```plaintext
[(1, I, 2),
 (2, den, 6),
 (3, har, 6),
 (4, jag, 6),
 (5, endast, 6),
 (6, tagit, 0),
 (7, med, 6),
 (8, totalsumman, 7),
 (9, samt, 8),
 (10, markeringen, 9),
 (11, av, 10),
 (12, de, 15),
 (13, tre, 15),
 (14, högsta, 15),
 (15, talen, 11),
 (16, ., 6)]
```

### Average Dependency Distance
The dependency distance is calculated as the absolute difference between the token index and its head index.

| Token | Index | Head Index | Distance |
|-------|-------|------------|----------|
| I     | 1     | 2          | 1        |
| den   | 2     | 6          | 4        |
| har   | 3     | 6          | 3        |
| jag   | 4     | 6          | 2        |
| endast| 5     | 6          | 1        |
| tagit | 6     | 0          | 0        |
| med   | 7     | 6          | 1        |
| totalsumman | 8 | 7        | 1        |
| samt  | 9     | 8          | 1        |
| markeringen | 10 | 9       | 1        |
| av    | 11    | 10         | 1        |
| de    | 12    | 15         | 3        |
| tre   | 13    | 15         | 2        |
| högsta| 14    | 15         | 1        |
| talen | 15    | 11         | 4        |
| .     | 16    | 6          | 10       |

**Total Distance:** 36  
**Number of Tokens:** 16  
**Average Dependency Distance:** 36 / 16 = **2.25**

---

**Final Output:**

```python
dependency_tree = [
    (1, "I", 2),
    (2, "den", 6),
    (3, "har", 6),
    (4, "jag", 6),
    (5, "endast", 6),
    (6, "tagit", 0),
    (7, "med", 6),
    (8, "totalsumman", 7),
    (9, "samt", 8),
    (10, "markeringen", 9),
    (11, "av", 10),
    (12, "de", 15),
    (13, "tre", 15),
    (14, "högsta", 15),
    (15, "talen", 11),
    (16, ".", 6)
]

average_dependency_distance = 2.25
```