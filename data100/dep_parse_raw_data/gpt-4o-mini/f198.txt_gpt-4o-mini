To analyze the given Swedish sentence and produce a dependency tree, we first identify the tokens and their respective heads. 

The sentence is: "Han hade lovat att föra med sig guld tillbaka till kungaparet och därför blev det en besvikelse när han möttes av fattigdom."

Here is the resulting dependency tree:

1. (1, Han, 2)
2. (2, hade, 3)
3. (3, lovat, 0)
4. (4, att, 3)
5. (5, föra, 4)
6. (6, med, 5)
7. (7, sig, 6)
8. (8, guld, 5)
9. (9, tillbaka, 5)
10. (10, till, 9)
11. (11, kungaparet, 10)
12. (12, och, 3)
13. (13, därför, 12)
14. (14, blev, 3)
15. (15, det, 14)
16. (16, en, 17)
17. (17, besvikelse, 14)
18. (18, när, 14)
19. (19, han, 18)
20. (20, möttes, 18)
21. (21, av, 20)
22. (22, fattigdom, 21)

Thus, the output in the specified format is:

```
[
    (1, Han, 2), 
    (2, hade, 3), 
    (3, lovat, 0), 
    (4, att, 3), 
    (5, föra, 4), 
    (6, med, 5), 
    (7, sig, 6), 
    (8, guld, 5), 
    (9, tillbaka, 5), 
    (10, till, 9), 
    (11, kungaparet, 10), 
    (12, och, 3), 
    (13, därför, 12), 
    (14, blev, 3), 
    (15, det, 14), 
    (16, en, 17), 
    (17, besvikelse, 14), 
    (18, när, 14), 
    (19, han, 18), 
    (20, möttes, 18), 
    (21, av, 20), 
    (22, fattigdom, 21)
]
```