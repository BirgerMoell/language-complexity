To produce a dependency tree for the provided Swedish sentence, we first need to identify the tokens and their respective head relationships. Here is the output based on the analysis of the sentence:

```plaintext
[
    (1, Jag, 2), 
    (2, vill, 0), 
    (3, även, 2), 
    (4, skänka, 2), 
    (5, ett, 6), 
    (6, stort, 7), 
    (7, tack, 4), 
    (8, till, 4), 
    (9, Evert, 10), 
    (10, Andersson, 8), 
    (11, ,, 8), 
    (12, Professor, 13), 
    (13, på, 14), 
    (14, institutionen, 12), 
    (15, för, 16), 
    (16, järnvägsteknik, 14), 
    (17, KTH, 16), 
    (18, samt, 4), 
    (19, Piotr, 20), 
    (20, Lukaszwicz, 18), 
    (21, ,, 18), 
    (22, Filosofie, 23), 
    (23, Doktor, 18), 
    (24, på, 25), 
    (25, institutionen, 22), 
    (26, för, 27), 
    (27, järnvägsteknik, 25), 
    (28, KTH, 27), 
    (29, ,, 18), 
    (30, för, 31), 
    (31, att, 32), 
    (32, de, 31), 
    (33, med, 34), 
    (34, bästa, 35), 
    (35, förmåga, 33), 
    (36, försökt, 31), 
    (37, att, 36), 
    (38, besvara, 37), 
    (39, alla, 40), 
    (40, mina, 41), 
    (41, möjliga, 39), 
    (42, och, 39), 
    (43, omöjliga, 39), 
    (44, frågor, 38), 
    (45, ,, 38), 
    (46, samt, 36), 
    (47, bistått, 36), 
    (48, med, 49), 
    (49, litteratur, 47), 
    (50, som, 51), 
    (51, varit, 50), 
    (52, ovärderlig, 51), 
    (53, för, 54), 
    (54, mig, 53), 
    (55, i, 56), 
    (56, mitt, 57), 
    (57, arbete, 55), 
    (58, ., 0)
]
```

This representation lists each token with its corresponding index and head, accurately reflecting the grammatical structure of the sentence.